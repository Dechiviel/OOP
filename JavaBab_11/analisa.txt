Latihan Melakukan overriding, overloading, dan overloading constructor

1. Class User
Class ini berperan sebagai superclass yang menyimpan atribut dasar berupa id, phone, username, dan password. Semua atribut dibuat private sehingga sesuai dengan prinsip enkapsulasi, dan aksesnya dilakukan lewat getter-setter. Class ini juga menyediakan dua versi constructor (tanpa parameter dan dengan parameter username, password), sehingga mendukung constructor overloading. Method login juga di-overload dengan dua versi: login menggunakan kombinasi username-password dan login menggunakan kombinasi phone-password. Dengan begitu, class User sudah menerapkan enkapsulasi, overloading constructor, serta method overloading. Satu catatan, atribut id bersifat static sehingga semua objek berbagi id yang sama, yang bisa menimbulkan masalah jika ingin membedakan setiap pengguna.

2. Class Dosen
Class ini merupakan subclass dari User yang menambahkan atribut khusus yaitu pangkat, golongan, dan key. Atribut-atribut ini juga dienkapsulasi dengan private serta memiliki getter-setter. Pada class ini terdapat implementasi overriding, yaitu method login(String, String) yang menimpa method dari superclass dengan menambahkan logika pemeriksaan key. Selain itu, ada juga beberapa bentuk overloading pada method login, misalnya versi login(String, String, String) dan login(long, String, String). Class ini juga memiliki constructor tanpa parameter dan dengan parameter username, password, sehingga mendukung constructor overloading. Dengan demikian, Dosen adalah contoh nyata class turunan yang memperluas fungsionalitas superclass dengan menambah atribut baru dan memperkaya metode login.

3. Class Mahasiswa
Class ini juga merupakan subclass dari User, tetapi berbeda dengan Dosen, Mahasiswa memiliki atribut tambahan berupa kelas dan relasi dengan Dosen melalui atribut dosenWali. Atribut-atribut tersebut dienkapsulasi dengan private dan dapat diakses lewat getter-setter. Sama seperti User dan Dosen, class ini juga memiliki constructor tanpa parameter dan dengan parameter username, password, sehingga tetap mendukung constructor overloading. Tidak ada overriding pada class ini karena Mahasiswa menggunakan logika login bawaan dari superclass User, sehingga sifatnya hanya memperluas data tanpa menimpa perilaku yang ada. Class ini menekankan konsep asosisasi antar objek dengan keberadaan atribut dosenWali.

4. Class TestLogin
Class ini berperan sebagai driver class atau tester untuk menjalankan program. Di dalamnya terdapat method main yang membuat objek Mahasiswa dan Dosen, lalu melakukan proses login dengan berbagai versi method yang sudah di-overload dan di-override. Pada bagian ini terlihat bagaimana konsep polimorfisme bekerja, yaitu objek yang berbeda (Mahasiswa dan Dosen) dapat menggunakan method login dengan cara yang sesuai dengan implementasi di masing-masing class. Output dari class ini juga menunjukkan hasil apakah login berhasil atau gagal, sehingga fungsinya lebih ke validasi bahwa konsep-konsep OOP (overloading, overriding, dan enkapsulasi) berjalan dengan benar.



Tugas Melakukan overriding, overloading, dan overloading constructor tanpa getter dan setter  

1. Class User
Class User tetap berperan sebagai superclass yang menampung atribut dasar id, phone, username, dan password, semuanya bersifat private untuk menjaga enkapsulasi. Perbedaannya dengan versi sebelumnya, akses terhadap atribut tidak lagi menggunakan getter-setter, melainkan langsung diinisialisasi melalui berbagai bentuk constructor overloading. Ada constructor kosong, constructor hanya dengan username, constructor dengan username dan password, serta constructor lengkap dengan username, password, dan phone. Hal ini memungkinkan fleksibilitas dalam pembuatan objek sesuai kebutuhan. Selain itu, class ini tetap memiliki dua versi method login untuk mendukung overloading: login via username-password atau login via phone-password. Dengan cara ini, meskipun tidak ada getter-setter, keamanan atribut tetap terjaga karena akses luar hanya melalui mekanisme konstruktor dan method yang disediakan.

2. Class Dosen
Class Dosen adalah subclass dari User yang menambahkan atribut pangkat, golongan, dan key. Semua atribut juga dienkapsulasi dengan private, tetapi tidak menggunakan getter-setter. Sebagai gantinya, nilai atribut dapat diatur langsung saat pembuatan objek melalui berbagai versi constructor overloading yang jumlahnya cukup banyak (mulai dari constructor tanpa parameter hingga constructor dengan parameter lengkap username, password, phone, pangkat, golongan, key). Dari sisi perilaku, Dosen mengimplementasikan overriding terhadap method login(String, String) dari User, dengan menambahkan validasi key. Selain itu, terdapat juga bentuk overloading method login yang menerima parameter tambahan seperti login(String, String, String) atau login(long, String, String). Dengan demikian, Dosen memperluas fungsionalitas superclass sekaligus menunjukkan polimorfisme melalui penggunaan login yang lebih kompleks dibanding User.

3. Class Mahasiswa
Class Mahasiswa juga merupakan subclass dari User yang menambahkan atribut dosenWali (relasi asosiatif dengan class Dosen) serta kelas. Seperti class lainnya, atribut bersifat private tanpa getter-setter, dan pengaturan nilai dilakukan melalui berbagai versi constructor overloading (mulai dari tanpa parameter hingga constructor dengan parameter lengkap username, password, phone, dosenWali, kelas). Class ini tidak melakukan overriding terhadap method login, sehingga mewarisi perilaku dari superclass User. Dengan demikian, Mahasiswa lebih fokus menambahkan informasi baru (relasi ke dosen wali dan kelas mahasiswa) dibanding memperluas perilaku. Keberadaan atribut dosenWali juga menegaskan adanya hubungan antar objek dalam program.

4. Class TestLogin
Class ini berfungsi sebagai driver class untuk menguji program. Pada method main, dibuat objek Mahasiswa dengan constructor yang langsung mengisi username, password, dan phone. Setelah itu dilakukan login menggunakan kombinasi phone dan password, yang memanfaatkan method login bawaan User. Kemudian dibuat objek Dosen dengan constructor lengkap yang juga mengatur nilai key, lalu dilakukan login dengan kombinasi username, password, dan key. Hasil login ditampilkan ke layar sebagai indikator apakah validasi berhasil atau tidak. Class ini memperlihatkan bagaimana constructor overloading bekerja dalam inisialisasi data tanpa getter-setter, serta bagaimana overriding dan overloading method login digunakan dalam praktik.

Jadi, perbedaan paling mencolok dari versi ini adalah: seluruh variabel tetap private, tetapi tidak ada lagi setter-getter. Sebagai gantinya, digunakan constructor overloading untuk memberi nilai saat instansiasi objek. Hal ini membuat program lebih ringkas, tetapi mengurangi fleksibilitas dalam mengubah nilai atribut setelah objek dibuat.